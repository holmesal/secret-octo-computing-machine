// Generated by CoffeeScript 1.6.3
(function() {
  var app, async, pushState, q, store;

  app = require('express.io')();

  async = require('async');

  q = require('q');

  store = require('./utils/store');

  app.http().io();

  pushState = function() {};

  app.io.on('connection', function(socket) {
    return console.log('New socket connection!');
  });

  app.io.on('disconnection', function(socket) {
    return console.log('Disconnected!!');
  });

  app.io.route('joinRoom', function(req) {
    var scope;
    scope = {};
    console.log('Request to join room: ' + req.data.room + ' - by: ' + req.data.name);
    return store.get(req.socket, 'name').then(function(name) {
      if (req.data.name) {
        scope.name = req.data.name;
      } else {
        scope.name = name;
      }
      return store.get(req.socket, 'room');
    }).then(function(room) {
      scope.room = room;
      if (room) {
        req.io.leave(room);
        app.io.room(room).broadcast('event', {
          type: 'meta',
          text: 'Ladies and gentlemen, ' + scope.name + 'has left the building.'
        });
      }
      return store.set(req.socket, 'room', req.data.room);
    }).then(function() {
      req.io.join(req.data.room);
      app.io.room(req.data.room).broadcast('event', {
        type: 'meta',
        text: 'OMG.' + scope.name + 'has joined the room: ' + req.data.room
      });
      if (req.data.name) {
        return store.set(req.socket, 'name', req.data.name);
      }
    });
  });

  app.io.route('sendMessage', function(req) {
    var scope;
    scope = {};
    return store.get(req.socket, 'name').then(function(name) {
      scope.author = name;
      console.log(scope.author + ': ' + req.data);
      return store.get(req.socket, 'room');
    }).then(function(room) {
      console.log('sending to ' + room);
      scope.room = room;
      app.io.room(room).broadcast('event', {
        type: 'message',
        text: req.data,
        author: scope.author
      });
      return console.log('sent!');
    });
  });

  app.io.route('changeName', function(req) {
    var scope;
    console.log('Request to change name to: ' + req.data);
    scope = {};
    return store.get(req.socket, 'name').then(function(name) {
      scope.oldName = name;
      return store.set(req.socket, 'name', req.data);
    }).then(function(name) {
      scope.newName = name;
      console.log('Name changed from ' + scope.oldName + ' to ' + name);
      return store.get(req.socket, 'currentRoom');
    }).then(function(room) {
      if (scope.oldName && scope.oldName !== scope.newName) {
        return app.io.room(room).broadcast('event', {
          type: 'meta',
          text: '"' + scope.oldName + '" will henceforth be known as "' + scope.newName + '"'
        });
      }
    });
  });

  app.listen(7076);

}).call(this);
